<UserControl x:Class="Designer.Views.DiagramPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:go="clr-namespace:Northwoods.GoXam;assembly=Northwoods.GoSilverlight"
	xmlns:context="clr-namespace:Shared.Silverlight.Controls;assembly=Shared.Silverlight.Controls"
    xmlns:golayout="clr-namespace:Northwoods.GoXam.Layout;assembly=Northwoods.GoSilverlight"
    xmlns:local="clr-namespace:Designer"
    xmlns:localview="clr-namespace:Designer.Views"
    xmlns:wfcommand="clr-namespace:Designer.Commands"
    xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit">
	<UserControl.Resources>
		<go:DataTemplateDictionary x:Key="NodeTemplateDictionary">
			<DataTemplate x:Key="Initial">
				<go:SpotPanel Style="{StaticResource SpotPanelStyle}"
                    go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}"
					go:Part.Deletable="False"
                    go:Part.Copyable="False"
                    MouseEnter="Node_MouseEnter"
                    MouseLeave="Node_MouseLeave" >
					<go:NodePanel Style="{StaticResource NodePanelStyle}">
						<Border BorderBrush="{StaticResource normalActivityBrush}" Style="{StaticResource NodeContentBorderStyle}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"></RowDefinition>
									<RowDefinition Height="*"></RowDefinition>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<StackPanel Grid.Row="0" Grid.Column="0" 
                                    Background="{StaticResource normalActivityBrush}" 
                                    Style="{StaticResource NodeContentHeaderStyle}">
									<TextBlock Style="{StaticResource NodeTextBlockStyle}" FontWeight="Bold"
                                           Text="{Binding Path=Data.Key, Mode=TwoWay}" ></TextBlock>
									<TextBlock Style="{StaticResource NodeTextBlockStyle}"
                                           go:Part.TextEditable="True"
                                           Text="{Binding Path=Data.WfName, Mode=TwoWay}" MaxWidth="60" 
                                            ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"  />
								</StackPanel>
								<StackPanel Grid.Row="0" Grid.Column="1" 
                                    Background="{StaticResource normalActivityBrush}"        
                                    Style="{StaticResource NodeContentHeaderStyle}">
									<Button x:Name="InitialMenu" Content="{Binding Path=Data.WfHasBranchProcess, Mode=TwoWay, Converter={StaticResource theMenuBtnContentConverter}}" Style="{StaticResource MenuButton}">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="Click">
												<wfcommand:SetProperty TargetName="InitialContextMenu" PropertyName="MousePosition" Value="{Binding ElementName=mainDiagram, Path=LastMousePointInModel}"/>
												<wfcommand:SetProperty TargetName="InitialContextMenu" PropertyName="IsOpen" Value="True" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</Button>
								</StackPanel>
								<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource NodeContentBodyStyle}">
									<TextBlock Style="{StaticResource NodeTextBlockStyle}"
                                        Text="{Binding Path=Data.WfDescription, Mode=TwoWay}"
                                        go:Part.TextEditable="True" MaxWidth="100" 
                                        ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"  />
								</StackPanel>
							</Grid>
							<context:ContextMenuService.ContextMenu>
								<context:ContextMenu x:Name="InitialContextMenu" OpenOnClick="True" Opened="ContextMenu_Opened" VisualStyle="Windows7">
									<context:ContextMenuItem Header="条件设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="Condition"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="资源设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="Resource"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="相关链接..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="RelativeLink"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="分支流程设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="BranchProcess"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="自动收集流程参数..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="ParametersNeedToBeCollected"  IsCheckable="False"  IsChecked="False"/>
								</context:ContextMenu>
							</context:ContextMenuService.ContextMenu>
						</Border>
					</go:NodePanel>
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag, Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portTop"
                        go:Node.LinkableFrom="False"
                        go:Node.ToSpot="MiddleTop"
                        go:SpotPanel.Spot="MiddleTop"
                        go:SpotPanel.Alignment="MiddleTop" 
                        go:Node.LinkableDuplicates="True" go:Node.LinkableSelfNode="True" />
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag, Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portBottom"
                        go:Node.LinkableTo="False"
                        go:Node.FromSpot="MiddleBottom"
                        go:SpotPanel.Spot="MiddleBottom"
                        go:SpotPanel.Alignment="MiddleBottom" 
                        go:Node.LinkableDuplicates="True" go:Node.LinkableSelfNode="True" />
				</go:SpotPanel>
			</DataTemplate>

			<DataTemplate x:Key="Conditional">
				<go:SpotPanel Style="{StaticResource SpotPanelStyle}"
                    go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}"
                    MouseEnter="Node_MouseEnter"
                    MouseLeave="Node_MouseLeave" >
					<go:NodePanel Sizing="Auto" go:SpotPanel.Main="True">
						<Path x:Name="Shape" Style="{StaticResource NodeShapeStyle}"
                            go:NodePanel.Figure="Diamond"
                            Stroke="Black"
                            StrokeThickness="1"
                            />
						<TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Path=Data.Text, Mode=TwoWay}" />
					</go:NodePanel>
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,
                                Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portTop"
                        go:Node.LinkableFrom="False"
                        go:Node.FromSpot="MiddleTop"
                        go:SpotPanel.Spot="MiddleTop"
                        go:SpotPanel.Alignment="MiddleTop" />
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,
                                Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portLeft"
                        go:Node.LinkableTo="False"
                        go:Node.FromSpot="MiddleLeft"
                        go:SpotPanel.Spot="MiddleLeft"
                        go:SpotPanel.Alignment="MiddleLeft" />
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,
                                Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portRight"
                        go:Node.LinkableTo="False"
                        go:Node.FromSpot="MiddleRight"
                        go:SpotPanel.Spot="MiddleRight"
                        go:SpotPanel.Alignment="MiddleRight" />
				</go:SpotPanel>
			</DataTemplate>

			<!--MouseLeftButtonDown="ActivityNode_MouseButton" MouseRightButtonDown="ActivityNode_MouseButton"-->
			<DataTemplate x:Key="Normal">
				<go:SpotPanel Style="{StaticResource SpotPanelStyle}"
                    go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}"
					MouseRightButtonDown="ActivityNode_MouseRightButtonDown"
                    MouseEnter="Node_MouseEnter"
                    MouseLeave="Node_MouseLeave">
					<go:NodePanel Style="{StaticResource NodePanelStyle}">
						<Border x:Name="ActivityNodeBorder" BorderBrush="{Binding Path=Data.IsDynamic, Converter={StaticResource theActivityBrushConverter}}" Style="{StaticResource NodeContentBorderStyle}" >
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"></RowDefinition>
									<RowDefinition Height="*"></RowDefinition>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<StackPanel Grid.Row="0" Grid.Column="0" 
											Background="{Binding Path=Data.IsDynamic, Converter={StaticResource theActivityBrushConverter}}"
                                    Style="{StaticResource NodeContentHeaderStyle}">
									<TextBlock Style="{StaticResource NodeTextBlockStyle}" FontWeight="Bold"
                                           Text="{Binding Path=Data.Key, Mode=TwoWay}" ></TextBlock>
									<TextBlock Style="{StaticResource NodeTextBlockStyle}"
                                           go:Part.TextEditable="True"
                                           Text="{Binding Path=Data.WfName, Mode=TwoWay}" MaxWidth="60" 
                                        ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"  />
								</StackPanel>
								<StackPanel Grid.Row="0" Grid.Column="1" 
                                            Background="{Binding Path=Data.IsDynamic, Converter={StaticResource theActivityBrushConverter}}"         
                                    Style="{StaticResource NodeContentHeaderStyle}">
									<Button x:Name="btnMenu" Content="{Binding Path=Data.WfHasBranchProcess, Mode=TwoWay, Converter={StaticResource theMenuBtnContentConverter}}" Style="{StaticResource MenuButton}">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="Click">
												<wfcommand:SetProperty TargetName="NormalActivityContextMenu" PropertyName="MousePosition" Value="{Binding ElementName=mainDiagram, Path=LastMousePointInModel}"/>
												<wfcommand:SetProperty TargetName="NormalActivityContextMenu" PropertyName="IsOpen" Value="True" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</Button>
								</StackPanel>
								<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource NodeContentBodyStyle}">
									<TextBlock Style="{StaticResource NodeTextBlockStyle}"
                                        Text="{Binding Path=Data.WfDescription, Mode=TwoWay}"
                                        go:Part.TextEditable="True" MaxWidth="100" 
                                        ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"  />
								</StackPanel>
							</Grid>
							<context:ContextMenuService.ContextMenu>
								<context:ContextMenu x:Name="NormalActivityContextMenu" VisualStyle="Windows7" Opened="ContextMenu_Opened">
									<context:ContextMenuItem Header="条件设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="Condition"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="资源设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="Resource"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="相关链接..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="RelativeLink"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="分支流程设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="BranchProcess"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="自动收集流程参数..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="ParametersNeedToBeCollected"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="是否是模版活动..."  UnChecked="ContextMenuItem_UnChecked" Checked="ContextMenuItem_Checked"   CheckIconType="CheckBox" IsCheckable="True" IsChecked="{Binding Path=Data.IsDynamic, Mode=TwoWay}"/>
									<context:Separator />
									<context:ContextMenuItem Header="设为模板..."  Click="ContextMenuTemplate_Click"  IsCheckable="False"  IsChecked="False"/>
								</context:ContextMenu>
							</context:ContextMenuService.ContextMenu>
						</Border>
					</go:NodePanel>
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag, Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portTop"
                        go:Node.LinkableFrom="False"
                        go:Node.ToSpot="MiddleTop"
                        go:SpotPanel.Spot="MiddleTop"
                        go:SpotPanel.Alignment="MiddleTop" 
                        go:Node.LinkableDuplicates="True" go:Node.LinkableSelfNode="True"/>

					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portLeft"
                        go:Node.FromSpot="MiddleLeft"
                        go:Node.ToSpot="MiddleLeft"
                        go:SpotPanel.Spot="MiddleLeft"
                        go:SpotPanel.Alignment="MiddleLeft" />

					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portRight"
                        go:Node.FromSpot="MiddleRight"
                        go:Node.ToSpot="MiddleRight"
                        go:SpotPanel.Spot="MiddleRight"
                        go:SpotPanel.Alignment="MiddleRight" />

					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag, Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portBottom"
                        go:Node.LinkableTo="False"
                        go:Node.FromSpot="MiddleBottom"
                        go:SpotPanel.Spot="MiddleBottom"
                        go:SpotPanel.Alignment="MiddleBottom" 
                        go:Node.LinkableDuplicates="True" go:Node.LinkableSelfNode="True"/>
				</go:SpotPanel>
			</DataTemplate>

			<DataTemplate x:Key="Composite">
				<go:SpotPanel Style="{StaticResource SpotPanelStyle}"
                    go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}"
                    MouseEnter="Node_MouseEnter"
                    MouseLeave="Node_MouseLeave" >
					<go:NodePanel Sizing="Auto" go:SpotPanel.Main="True">
						<Path x:Name="Shape" Style="{StaticResource NodeShapeStyle}"
                            go:NodePanel.Figure="FramedRectangle"
                            Stroke="Black"
                            StrokeThickness="1"
                            Fill="{StaticResource theYellowBrush}" />
						<TextBlock Style="{StaticResource TextBlockStyle}"
                            Text="{Binding Path=Data.Text, Mode=TwoWay}"
                            MinWidth="65"
                            go:Part.TextEditable="True" />
					</go:NodePanel>
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,
                                Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portTop"
                        go:Node.LinkableFrom="False"
                        go:Node.FromSpot="MiddleTop"
                        go:SpotPanel.Spot="MiddleTop"
                        go:SpotPanel.Alignment="MiddleTop" />
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,
                                Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portBottom"
                        go:Node.LinkableTo="False"
                        go:Node.FromSpot="MiddleBottom"
                        go:SpotPanel.Spot="MiddleBottom"
                        go:SpotPanel.Alignment="MiddleBottom" />
					<Button x:Name="btnAddSubDiagram" go:SpotPanel.Alignment="0 0.5" go:SpotPanel.Spot="1 0.5">
						<Button.Content>
							<Ellipse Width="10" Height="10" Fill="{Binding Path=Data.RelatedWorkflowID, Converter={StaticResource hasRelatedDiagramConverter}}" />
						</Button.Content>
					</Button>
				</go:SpotPanel>
			</DataTemplate>

			<DataTemplate x:Key="Completed">
				<go:SpotPanel Style="{StaticResource SpotPanelStyle}"
                    go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}"
                    go:Part.Deletable="False"
                    go:Part.Copyable="False"
                    MouseEnter="Node_MouseEnter"
                    MouseLeave="Node_MouseLeave" >
					<go:NodePanel Style="{StaticResource NodePanelStyle}">
						<Border BorderBrush="{StaticResource normalActivityBrush}" Style="{StaticResource NodeContentBorderStyle}" >
							<Grid Background="Black">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"></RowDefinition>
									<RowDefinition Height="*"></RowDefinition>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<StackPanel Grid.Row="0" Grid.Column="0" 
                                    Background="{StaticResource normalActivityBrush}" 
                                    Style="{StaticResource NodeContentHeaderStyle}">
									<TextBlock Style="{StaticResource NodeTextBlockStyle}" FontWeight="Bold"
                                           Text="{Binding Path=Data.Key, Mode=TwoWay}" ></TextBlock>
									<TextBlock Style="{StaticResource NodeTextBlockStyle}"
                                           go:Part.TextEditable="True"
                                           Text="{Binding Path=Data.WfName, Mode=TwoWay}" MaxWidth="60" 
                                        ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"  />
								</StackPanel>
								<StackPanel Grid.Row="0" Grid.Column="1" 
                                    Background="{StaticResource normalActivityBrush}"        
                                    Style="{StaticResource NodeContentHeaderStyle}">
									<Button x:Name="btnMenu" Content="{Binding Path=Data.WfHasBranchProcess, Mode=TwoWay, Converter={StaticResource theMenuBtnContentConverter}}" Style="{StaticResource MenuButton}">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="Click">
												<wfcommand:SetProperty TargetName="CompletedContextMenu" PropertyName="MousePosition" Value="{Binding ElementName=mainDiagram, Path=LastMousePointInModel}"/>
												<wfcommand:SetProperty TargetName="CompletedContextMenu" PropertyName="IsOpen" Value="True" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</Button>
								</StackPanel>
								<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource NodeContentBodyStyle}">
									<TextBlock Style="{StaticResource NodeTextBlockStyle}"
                                        Text="{Binding Path=Data.WfDescription, Mode=TwoWay}"
                                        go:Part.TextEditable="True" MaxWidth="100" 
                                        ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"  />
								</StackPanel>
							</Grid>
							<context:ContextMenuService.ContextMenu>
								<context:ContextMenu x:Name="CompletedContextMenu" VisualStyle="Windows7" Opened="ContextMenu_Opened" >
									<context:ContextMenuItem Header="条件设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="Condition"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="资源设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="Resource"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="相关链接..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="RelativeLink"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="分支流程设置..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="BranchProcess"  IsCheckable="False"  IsChecked="False"/>
									<context:ContextMenuItem Header="自动收集流程参数..." Command="{Binding Path=Data.PropertyChangeCommand}" CommandParameter="ParametersNeedToBeCollected"  IsCheckable="False"  IsChecked="False"/>
								</context:ContextMenu>
							</context:ContextMenuService.ContextMenu>
						</Border>
					</go:NodePanel>
					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag, Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portTop"
                        go:Node.LinkableFrom="False"
                        go:Node.ToSpot="MiddleTop"
                        go:SpotPanel.Spot="MiddleTop"
                        go:SpotPanel.Alignment="MiddleTop" />

					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portLeft"
                        go:Node.FromSpot="MiddleLeft"
                        go:Node.ToSpot="MiddleLeft"
                        go:SpotPanel.Spot="MiddleLeft"
                        go:SpotPanel.Alignment="MiddleLeft" />

					<Ellipse Style="{StaticResource EllipseStyle}"
                        Stroke="{Binding Path=Node.Tag,Converter={StaticResource nodePortConverter}}"
                        go:Node.PortId="portRight"
                        go:Node.FromSpot="MiddleRight"
                        go:Node.ToSpot="MiddleRight"
                        go:SpotPanel.Spot="MiddleRight"
                        go:SpotPanel.Alignment="MiddleRight" />
				</go:SpotPanel>
			</DataTemplate>
		</go:DataTemplateDictionary>
		
		<DataTemplate x:Key="LinkTemplate">
			<go:LinkPanel go:Part.Reshapable="True" Style="{StaticResource LinkPanelStyle}" MouseLeftButtonDown="Link_MouseLeftButtonDown">
				<go:Link.Route>
					<go:Route Routing="Orthogonal" Curve="JumpOver" Corner="5" RelinkableFrom="True" RelinkableTo="True" />
				</go:Link.Route>
				<Polygon Fill="Black" Points="0 0  8 4  0 8  3 4" go:LinkPanel.Index="-1"
                         go:LinkPanel.Alignment="1 0.5" go:LinkPanel.Orientation="Along" />
				<Path go:LinkPanel.IsLinkShape="True" StrokeThickness="2"
                      Stroke="{Binding Path=Data.WfEnabled,Converter={StaticResource theTranBrushConverter}}" 
                      StrokeDashArray="{Binding Path=Data.WfReturnLine,Converter={StaticResource theReturnLineConverter}}"/>
				<StackPanel Orientation="Horizontal" go:LinkPanel.Orientation="Upright" go:LinkPanel.Offset="0 -10">
					<Button x:Name="btnCondition" Click="btnCondition_Click" Content="C"></Button>
					<Button x:Name="btnVariable" Click="btnVariable_Click" Content="V"></Button>
				</StackPanel>
				<TextBlock Text="{Binding Path=Data.Text, Mode=TwoWay}" TextWrapping="Wrap"
                     go:LinkPanel.Orientation="Upright" go:LinkPanel.Offset="0 10"></TextBlock>
			</go:LinkPanel>
		</DataTemplate>

		<Style x:Key="AccordionStyle" TargetType="layoutToolkit:Accordion">
			<Setter Property="SelectionMode" Value="ZeroOrMore"></Setter>
			<Setter Property="BorderThickness" Value="0"></Setter>
			<Setter Property="HorizontalAlignment" Value="Right"></Setter>
			<Setter Property="VerticalAlignment" Value="Bottom"></Setter>
			<Setter Property="Padding" Value="1,1,1,1"></Setter>
		</Style>

		<Style x:Key="MenuNodeStyle" TargetType="UserControl">
			<Setter Property="go:Part.Deletable" Value="False" />
			<Setter Property="go:Part.Copyable" Value="False" />
			<Setter Property="go:Part.Visible" Value="False" />
			<Setter Property="go:Part.LayerName" Value="Adornment"></Setter>
		</Style>

		<Style x:Key="SliderStyle" TargetType="Slider">
			<Setter Property="Orientation" Value="Horizontal"></Setter>
			<Setter Property="Width" Value="180"></Setter>
			<Setter Property="Minimum" Value="0.1"></Setter>
			<Setter Property="Maximum" Value="2"></Setter>
		</Style>

		<Style x:Key="DiagramStyle" TargetType="go:Diagram">
			<Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
			<Setter Property="VerticalAlignment" Value="Bottom"></Setter>
			<Setter Property="InitialScale" Value="1"></Setter>
			<Setter Property="AllowEdit" Value="True"></Setter>
			<Setter Property="AllowDrop" Value="True"></Setter>
		</Style>
	</UserControl.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid.RowDefinitions>
			<RowDefinition Height="*"></RowDefinition>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"></ColumnDefinition>
		</Grid.ColumnDefinitions>
		<!-- MouseRightButtonUp="mainDiagram_MouseRightButtonUp"  SelectionChanged="mainDiagram_SelectionChanged"  MouseLeftButtonUp="mainDiagram_MouseLeftButtonUp"  SelectionChanged="mainDiagram_SelectionChanged" -->
		<!--绘图区-->
		<go:Diagram x:Name="mainDiagram" Grid.Row="0" Style="{StaticResource DiagramStyle}"
                    LinkTemplate="{StaticResource LinkTemplate}"    
                    NodeTemplateDictionary="{StaticResource NodeTemplateDictionary}"
					MouseRightButtonDown="Process_MouseButton"
					ContextMenuEnabled="True"
                    DragSelectingTool="{x:Null}"
                    Tag="{Binding Key}" 
                    Model="{Binding DiagramModel, Mode=TwoWay}"
                    TemplateApplied="mainDiagram_TemplateApplied">
			<go:Diagram.PartManager>
				<local:WorkflowPartManager></local:WorkflowPartManager>
			</go:Diagram.PartManager>
			<go:Diagram.TextEditingTool>
				<local:WorkflowTextEditingTool></local:WorkflowTextEditingTool>
			</go:Diagram.TextEditingTool>
			<go:Diagram.RelinkingTool>
				<local:WorkflowRelinkingTool></local:WorkflowRelinkingTool>
			</go:Diagram.RelinkingTool>
			<context:ContextMenuService.ContextMenu>
				<context:ContextMenu x:Name="processContextMenu" VisualStyle="Metro">
					<context:ContextMenuItem Header="相关链接..." Command="{Binding Path=ProcessChangeCommand}" CommandParameter="RelativeLink"  IsCheckable="False"  IsChecked="False"/>
					<context:ContextMenuItem Header="撤销通知人..." Command="{Binding Path=ProcessChangeCommand}" CommandParameter="CancelReceivers"  IsCheckable="False"  IsChecked="False"/>
					<context:ContextMenuItem Header="变量编辑..." Command="{Binding Path=ProcessChangeCommand}" CommandParameter="Variables"  IsCheckable="False"  IsChecked="False"/>
					<context:ContextMenuItem Header="自动收集流程参数..." Command="{Binding Path=ProcessChangeCommand}" CommandParameter="ParametersNeedToBeCollected"  IsCheckable="False"  IsChecked="False"/>
					<context:ContextMenuItem Header="权限矩阵..." Command="{Binding Path=ProcessChangeCommand}" CommandParameter="ImportWfMatrix"  IsCheckable="False"  IsChecked="False"/>
                    <context:ContextMenuItem Header="仿真..." Command="{Binding Path=ProcessChangeCommand}" CommandParameter="Simulation"  IsCheckable="False"  IsChecked="False"/>

                </context:ContextMenu>
			</context:ContextMenuService.ContextMenu>
		</go:Diagram>
		<!--绘图区结束-->

		<!--缩放窗口-->
		<layoutToolkit:Accordion Grid.Row="0" Style="{StaticResource AccordionStyle}">
			<layoutToolkit:AccordionItem IsSelected="True" Header="预览与缩放">
				<Border Style="{StaticResource CommonBorderStyle}">
					<StackPanel>
						<Slider x:Name="zoomSlider" Style="{StaticResource SliderStyle}"/>
						<go:Overview x:Name="myOverview" Width="200" Height="100" AllowZoom="False" />
					</StackPanel>
				</Border>
			</layoutToolkit:AccordionItem>
		</layoutToolkit:Accordion>
		<!--缩放窗口结束-->
	</Grid>
</UserControl>
