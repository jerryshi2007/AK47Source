Accessibility = 包含属于组件对象模型 (COM) 辅助功能接口的托管包装的一部分的类型。Microsoft.Aspnet.Snapin = 包含 ASP.NET 管理控制台应用程序与 Microsoft 管理控制台 (MMC) 交互所必需的类。Microsoft.Build.BuildEngine = 包含表示 MSBuild 引擎的类。Microsoft.Build.Conversion = 包含 Visual Studio 用来转换项目文件的类型。Microsoft.Build.Framework = 包含组成 MSBuild 的任务、记录器和事件的类。Microsoft.Build.Tasks = 包含 MSBuild 附带的所有任务的实现。Microsoft.Build.Tasks.Deployment.Bootstrapper = 包含由 MSBuild 在内部使用的类。Microsoft.Build.Tasks.Deployment.ManifestUtilities = 包含由 MSBuild 在内部使用的类。Microsoft.Build.Tasks.Hosting = 包含由 MSBuild 在内部使用的类。Microsoft.Build.Tasks.Windows = 包含由 MSBuild 在内部使用的类。Microsoft.Build.Utilities = 提供可用于创建您自己的 MSBuild 记录器和任务的帮助器类。Microsoft.CSharp = 包含支持用 C# 语言进行编译和代码生成的类。Microsoft.Ink = 包含在 Tablet PC 上实现数字墨迹的类型。Microsoft.JScript = 包含支持用 JScript 语言进行编译和代码生成的类。Microsoft.ServiceModel.Channels.Mail = 包含在 .NET Compact Framework 上和使用基于 Windows Communication Foundation (WCF) 的 Exchange Server 邮件传输的桌面上支持编程应用的类。Microsoft.ServiceModel.Channels.Mail.ExchangeWebService = 包含通过使用 .NET Framework 在桌面上提供 Microsoft Exchange Server 邮件传输的实现的类。Microsoft.ServiceModel.Channels.Mail.WindowsMobile = 包含在使用 .NET Compact Framework 的 Windows Mobile 设备上提供 Microsoft Exchange Server 邮件传输的实现的类。Microsoft.SqlServer.Server = 包含专用于 .NET Framework 公共语言运行库 (CLR) 组件与 Microsoft SQL Server 和 SQL Server 数据库引擎进程执行环境的集成的类。Microsoft.StylusInput = 包含用于实时处理来自数字化的手写笔数据包数据的类型。Microsoft.StylusInput.PluginData = 包含表示传递给 RealTimeStylus 插件的数据的类型。Microsoft.VisualBasic = 包含支持用 Visual Basic 语言进行编译和代码生成的类。Microsoft.VisualBasic.ApplicationServices = 包含支持 Visual Basic 应用程序模型并提供对应用程序信息的访问的类型。Microsoft.VisualBasic.Compatibility.VB6 = 包含一些工具在将 Visual Basic 6.0 升级到 Visual Basic .NET 时所使用的类型。Microsoft.VisualBasic.CompilerServices = 包含支持 Visual Basic 编译器的仅供内部使用的类型。Microsoft.VisualBasic.Devices = 包含支持与 Visual Basic 中的设备相关的 My 对象的类型。Microsoft.VisualBasic.FileIO = 包含支持 Visual Basic 中的 My 文件系统对象的类型。Microsoft.VisualBasic.Logging = 包含支持 Visual Basic 中的 My 日志记录对象的类型，并提供可将日志记录输出定向到文件的简单日志侦听器。Microsoft.VisualBasic.MyServices = 包含支持 Visual Basic 中的 My 的类型。Microsoft.VisualBasic.MyServices.Internal = 包含支持 Visual Basic 中的 My 的仅供内部使用的类型。Microsoft.VisualC = 包含支持 Visual C++ 编译器的类型。Microsoft.VisualC.StlClr = 包含用于实现 STL/CLR 库的类型。Microsoft.VisualC.StlClr.Generic = 包含用于实现 STL/CLR 库的泛型接口的类型。Microsoft.Vsa = 包含使您可以将 .NET Framework 脚本引擎的脚本集成到应用程序中并在运行时编译和执行代码的接口。Microsoft.Web.Administration = 包含用于管理 Internet 信息服务 (IIS) 管理器的类。Microsoft.Web.Management.Client = 包含用于在 IIS 管理器中显示的开发工具的类。Microsoft.Web.Management.Client.Extensions = 包含用于扩展 IIS 管理器中的功能的类。Microsoft.Web.Management.Client.Win32 = 包含用于为在 IIS 管理器中显示的工具创建 Windows 窗体的用户界面类。Microsoft.Web.Management.Features.Administrators = 包含用于标识管理员模块的类。Microsoft.Web.Management.Features.Delegation = 包含用于标识委托模块的类。Microsoft.Web.Management.Features.Service = 包含用于标识管理服务模块的类。Microsoft.Web.Management.Host = 包含用于标识管理单元的宿主的接口。Microsoft.Web.Management.Host.Shell = 包含用于启动 IIS 管理器并向其传递信息的类。Microsoft.Web.Management.Server = 包含用于在 IIS 管理器中实现管理功能的服务器部分的类型。Microsoft.Win32 = 提供两种类型的类：处理由操作系统引发的事件的类和对系统注册表进行操作的类。Microsoft.Win32.SafeHandles = 包含安全句柄类的抽象派生类，安全句柄类提供支持文件和操作系统句柄的常见功能。Microsoft.Windows.Themes = 公开一组由 Windows Presentation Foundation (WPF) 定义的主题。Microsoft.WindowsCE.Forms = 包含用于使用 .NET Compact Framework 开发 Pocket PC 和 Smartphone Windows 窗体应用程序的类。Microsoft.WindowsMobile.DirectX = 包含用于开发带有 .NET Compact Framework 的设备上使用的 DirectX 应用程序的类。Microsoft.WindowsMobile.DirectX.Direct3D = 包含用于开发带有 .NET Compact Framework 的设备上使用的 Direct3D 应用程序的类。System = 包含用于定义常用值和引用数据类型、事件和事件处理程序、接口、属性和处理异常的基础类和基类。其他类提供支持下列操作的服务：数据类型转换，方法参数操作，数学计算，远程和本地程序调用，应用程序环境管理以及对托管和非托管应用程序的监管。System.AddIn = 包含用于标识外接程序的属性。System.AddIn.Contract = 包含为独立更新的组件之间的通信提供基础的类型。System.AddIn.Contract.Automation = 包含组件用于访问类型信息和调用类型成员的类型。System.AddIn.Contract.Collections = 包含用于实现外接程序开发所用的集合类的类型。System.AddIn.Hosting = 提供用于发现、注册、激活和控制外接程序的类型。System.AddIn.Pipeline = 提供用于在宿主应用程序与外接程序之间构造通信管线的类。System.CodeDom = 包含可用于表示源代码文档的元素和结构的类。 这些元素可用于为源代码文档建立结构模型。通过使用 System.CodeDom.Compiler 命名空间所提供的功能，可以将源代码文档输出为用受支持的语言编写的源代码。System.CodeDom.Compiler = 包含用于管理用受支持的编程语言生成和编译源代码的类型。每个代码生成器都可以基于代码文档对象模型 (CodeDOM) 源代码模型（由 System.CodeDom 命名空间提供的元素组成）的结构来生成使用某种特定的编程语言的源代码。System.Collections = 包含定义各种对象集合（如列表、队列、位数组、哈希表和字典）的接口和类。System.Collections.Generic = 包含用于定义泛型集合的接口和类；泛型集合允许用户创建强类型的集合，这种集合在类型安全和性能上均优于非泛型强类型集合。System.Collections.ObjectModel = 包含能在可重用库的对象模型中用作集合的类。在属性或方法返回集合时使用这些类。 System.Collections.Specialized = 包含专用的强类型集合；例如，链接表词典、位向量以及只包含字符串的集合。System.ComponentModel = 提供用于实现组件和控件的运行时和设计时行为的类。此命名空间包括用于属性和类型转换器的实现、数据源绑定和组件授权的基类和接口。System.ComponentModel.Design = 包含可由开发人员用来生成自定义设计时组件行为和在设计时配置组件的用户界面的类。设计时环境提供了使开发人员能够安排组件并配置它们的属性的系统。System.ComponentModel.Design.Data = 包含用于实现数据相关的组件的设计时行为的类。System.ComponentModel.Design.Serialization = 提供支持在设计时自定义和控制序列化的类型。System.Configuration = 包含提供用于处理配置数据的编程模型的类型。System.Configuration.Assemblies = 包含用于配置程序集的类。System.Configuration.Install = 提供使您可以为自己的组件编写自定义安装程序的类。Installer 类是 .NET Framework 中所有自定义安装程序的基类。System.Configuration.Provider = 包含由服务器和客户端应用程序共享以支持可插接式模型轻松地添加或移除功能的基类。System.Data = 包含组成大部分 ADO.NET 结构的类。ADO.NET 结构使您可以生成可用于有效管理来自多个数据源的数据的组件。System.Data.Common = 包含由 .NET Framework 数据提供程序共享的类。.NET Framework 数据提供程序描述用于在托管空间中访问数据源（如数据库）的类的集合。System.Data.Design = 包含可用于生成自定义的类型化数据集的类。System.Data.Linq = 包含支持在 LINQ to SQL 应用程序中与关系数据库进行交互的类。System.Data.Linq.Mapping = 包含用于生成表示关系数据库的结构和内容的 LINQ to SQL 对象模型的类。System.Data.Odbc = 包含封装 ODBC .NET Framework 数据提供程序的类。ODBC .NET Framework 数据提供程序描述了用于在托管空间中访问 ODBC 数据源的类集合。System.Data.OleDb = 包含封装 OLE DB .NET Framework 数据提供程序的类。OLE DB .NET Framework 数据提供程序描述了用于在托管空间中访问 OLE DB 数据源的类集合。System.Data.OracleClient = 包含封装 Oracle .NET Framework 数据提供程序的类。Oracle .NET Framework 数据提供程序描述了用于在托管空间中访问 Oracle 数据源的类集合。System.Data.Sql = 包含支持特定于 SQL Server 的功能的类。此类的 API 扩展已添加到 SQL Server 的 .NET Framework 数据提供程序 (System.Data.SqlClient) 中。System.Data.SqlClient = 包含封装 SQL Server .NET Framework 数据提供程序的类。SQL Server .NET Framework 数据提供程序描述了用于在托管空间中访问 SQL Server 数据库的类集合。System.Data.SqlServerCe = 描述可用于在托管环境下从基于 Windows CE 的设备访问 SQL Server CE 中的数据库的类集合。 通过此命名空间，可以在一个设备上创建 SQL Server CE 数据库，并且可以与另一个设备或远程服务器上的 SQL Server 数据库建立连接。System.Data.SqlTypes = 包含用于 SQL Server 中的本机数据类型的类。这些类提供了其他数据类型的更快速的替代方式。使用此命名空间中的类有助于防止在可能发生精度损失的情况中出现的类型转换错误。由于其他数据类型与 SqlTypes 在后台相互转换，因此在此命名空间内显式创建和使用对象同样会产生较快的代码。System.Deployment.Application = 提供用于在 ClickOnce 应用程序中创建自定义升级行为的类型。System.Diagnostics = 提供使您可以与系统进程、事件日志和性能计数器进行交互的类。此命名空间还提供了可让您调试应用程序并跟踪代码执行的类。System.Diagnostics.CodeAnalysis = 包含用于与代码分析工具交互的类。代码分析工具用于分析代码是否符合诸如命名和安全规则之类的编码约定。System.Diagnostics.Design = 包含可用于扩展应用程序监视和检测的设计时支持的类。System.Diagnostics.Eventing = 包含支持在 Windows Vista 上实现应用程序的类型。检测功能（在启用时）会将事件数据记录到 Windows 事件跟踪 (ETW) 跟踪子系统中。System.Diagnostics.Eventing.Reader = 包含支持从事件日志中读取信息并管理事件日志的类型。System.Diagnostics.PerformanceData = 包含用于提供计数器数据的类，计数器数据会将性能度量值向使用者公开。System.Diagnostics.SymbolStore = 提供使您可以读取和写入调试符号信息（如 Microsoft 中间语言 (MSIL) 映射到的源行）的类。面向 .NET Framework 的编译器可以将调试符号信息存储到程序员的数据库 (PDB) 文件中。调试器和代码探查器工具可以在运行时读取调试符号信息。System.DirectoryServices = 提供从托管代码轻松访问 Active Directory 的方法。 该命名空间包含两个组件类，即 DirectoryEntry 和 DirectorySearcher，它们使用 Active Directory 服务接口 (ADSI) 技术。ADSI 是由 Microsoft 提供的一组接口，是一种可灵活处理各种网络提供程序的工具。无论网络有多大，ADSI 都可以使管理员能够相对容易地定位和管理网络上的资源。System.DirectoryServices.AccountManagement = 跨多个主体存储区提供用户、计算机和组安全主体的统一访问和操作。System.DirectoryServices.ActiveDirectory = 提供围绕 Active Directory 目录服务任务构建的高级别抽象对象模型。Active Directory 目录服务概念（如目录林、域、网站、子网、分区和架构）都属于对象模型的组成部分。System.DirectoryServices.Protocols = 提供在轻型目录访问协议 (LDAP) 版本 3 和目录服务标记语言 (DSML) 版本 2.0 标准中定义的方法。System.Drawing = 提供对 GDI+ 基本图形功能的访问。System.Drawing.Drawing2D、System.Drawing.Imaging 和 System.Drawing.Text 命名空间中提供了更高级的功能。System.Drawing.Design = 包含扩展设计时用户界面 (UI) 逻辑和绘制的类。可以进一步扩展此设计时功能来创建以下对象：自定义工具箱项，类型特定的值编辑器或类型转换器，其中类型特定的值编辑器用于编辑和以图形方式表示所支持的类型的值；类型转换器用于在特定的类型之间转换值。 此命名空间提供了开发设计时用户界面扩展的基本框架。System.Drawing.Drawing2D = 提供高级的二维和矢量图形功能。此命名空间包含渐变画笔、Matrix 类（用于定义几何变换）和 GraphicsPath 类。System.Drawing.Imaging = 提供高级的 GDI+ 图像处理功能。基本图形功能由 System.Drawing 命名空间提供。System.Drawing.Printing = 提供与打印相关的服务。 通常情况下，您可以创建 PrintDocument 类的新实例，设置描述打印内容的属性，然后调用 Print 方法来实际打印文档。System.Drawing.Text = 提供高级的 GDI+ 版式功能。基本图形功能由 System.Drawing 命名空间提供。此命名空间中的类使用户可以创建和使用字体集合。System.EnterpriseServices = 为企业级应用程序提供重要的基础结构。COM+ 为企业级环境中部署的组件编程模型提供服务结构。此命名空间为 .NET Framework 对象提供了对 COM+ 服务的访问，从而使 .NET Framework 对象更适用于企业级应用程序。System.EnterpriseServices.CompensatingResourceManager = 提供使您可以在托管代码中使用补偿资源管理器 (CRM) 的类。CRM 是由 COM+ 提供的一项服务，它使您可以在 Microsoft 分布式事务处理协调器 (DTC) 事务中包括非事务性对象。虽然 CRM 不提供完整资源管理器的功能，但它们却通过恢复日志提供事务性原子性（全有或全无行为）和持久性。System.EnterpriseServices.Internal = 提供 COM+ 服务的基础结构支持。此命名空间中的类和接口专门用于支持从非托管 COM+ 类对 System.EnterpriseServices 进行调用。System.Globalization = 包含定义区域性相关信息的类；这些信息包括语言，国家/地区，正在使用的日历，日期、货币和数字的格式模式以及字符串的排序顺序。 这些类对于编写全球化（国际化）应用程序很有用。System.IdentityModel.Claims = 包含支持在可扩展标识模型中使用声明的类型。System.IdentityModel.Policy = 包含用于在 Windows Communication Foundation (WCF) 中生成或使用授权策略的类型。System.IdentityModel.Selectors = 包含用于为传出的 SOAP 消息提供安全令牌和验证传入的 SOAP 消息中的安全令牌的类型。System.IdentityModel.Tokens = 包含与 Windows Communication Foundation (WFC) 附带的预定义安全令牌相关的类型。System.IO = 包含允许对数据流和文件进行同步和异步读写的类型。System.IO.Compression = 包含提供基本的流压缩和解压缩的类。System.IO.IsolatedStorage = 包含支持创建和使用独立存储区的类型。通过使用这些存储区，可以读取和写入受信任程度较小的代码无法访问的数据，并且有助于防止公开可保存在文件系统中其他位置的敏感信息。数据存储在独立于当前用户和代码所在的程序集的隔离舱中。System.IO.Log = 包含用于实现自定义诊断日志记录或事务处理系统的类型。System.IO.Packaging = 包含支持在单个容器中存储多个数据对象的类型。System.IO.Pipes = 包含围绕命名和匿名管道提供对流的访问的类型。System.IO.Ports = 包含控制串行端口的类，提供用于同步和事件驱动的 I/O 的框架、对插针和中断状态的访问、对串行驱动程序属性的访问以及用于指定端口特征的枚举。System.Linq = 包含支持使用语言集成查询 (LINQ) 的查询的类和接口。System.Linq.Expressions = 包含可使语言级别的代码表达式表示为表达式目录树形式的对象的类型。System.Management = 提供对一组丰富的管理信息和管理事件（它们是关于符合 Windows Management Instrumentation (WMI) 基础结构的系统、设备和应用程序的）的访问。System.Management.Instrumentation = 提供一些类，检测管理应用程序以及通过 WMI 向潜在使用者公开管理信息和事件时需要这些类。System.Media = 包含用于播放声音文件和访问系统声音的类。System.Messaging = 提供使您可以连接、监视和管理网络上的消息队列以及发送、接收或查看消息的类。System.Messaging.Design = 包含可用于扩展 System.Messaging 类设计时支持的类。System.Net = 为当前网络采用的多种协议提供简单的编程接口。WebRequest 和 WebResponse 类形成了所谓的可插接式协议的基础，可插接式协议是网络服务的一种实现，使您能够开发出使用 Internet 资源的应用程序，而不必考虑各种协议的具体细节。System.Net.Cache = 定义类型和枚举，这些类型和枚举用于为使用 WebRequest 和 HttpWebRequest 类获得的资源定义缓存策略。System.Net.Configuration = 包含应用程序以编程方式访问和更新 System.Net 命名空间的配置设置所用的类。System.Net.Mail = 包含用于将电子邮件发送到简单邮件传输协议 (SMTP) 服务器以进行传送的类。System.Net.Mime = 包含用于表示多用途 Internet 邮件交换 (MIME) 标头的类型。这些类型与 System.Net.Mail 命名空间中的类型配合使用，可在使用 SmtpClient 类发送电子邮件时指定 Content-Type、Content-Disposition 和 Content-transfer-Encoding 等标头。System.Net.NetworkInformation = 提供对网络流量数据、网络地址信息和本地计算机地址变更通知的访问。该命名空间还包含实现 Ping 实用工具的类。可以使用 Ping 和相关的类检查是否可通过网络访问计算机。System.Net.Security = 包含提供用于主机间安全通信的网络流的类型。System.Net.PeerToPeer = 提供对对等网络功能的访问。System.Net.PeerToPeer.Collaboration = 提供用于增强对等网络功能并赋予无服务器托管协作会话功能的类型。System.Net.Security = 提供用于主机间安全通信的网络流。System.Net.Sockets = 为需要帮助控制网络访问的开发人员提供 Windows 套接字 (Winsock) 接口的托管实现。System.Printing = 包含支持打印的类型。System.Printing.IndexedProperties = 包含提供对打印系统对象的属性的访问（不使用反射）并允许快速将属性设置复制到同一类型的另一个对象的类。System.Printing.Interop = 提供支持托管 PrintTicket 对象与非托管图形设备接口 (GDI) DEVMODE 结构之间的相互转换的类型。System.Reflection = 包含提供已加载类型、方法和字段的托管视图的类和接口，并具有动态创建和调用类型的能力。System.Reflection.Emit = 包含允许编译器或工具发出元数据和 Microsoft 中间语言 (MSIL) 并在磁盘上生成 PE 文件（可选）的类。这些类的主要客户端是脚本引擎和编译器。System.Resources = 提供允许开发人员创建、存储和管理应用程序中使用的各种区域性特定资源的类和接口。System.Resources.Tools = 包含 StronglyTypedResourceBuilder 类，该类提供对强类型资源的支持。从 .NET Framework 2.0 版开始，此编译时功能通过创建包含一组静态只读 (get) 属性的类封装对资源的访问，从而更容易使用资源。System.Runtime = 包含支持不同命名空间的高级类型，例如 System、Runtime 命名空间和 Security 命名空间。System.Runtime.CompilerServices = 为使用托管代码的编译器编写器提供功能，以在影响公共语言运行库的运行时行为的元数据中指定属性。此命名空间中的类只用于编译器编写器。System.Runtime.ConstrainedExecution = 定义一组类型，在特定代码的作者和利用该代码依赖项的开发人员之间枚举和定义可靠性协定。这些类型仅用于受约束执行区域 (CER)。System.Runtime.Hosting = 包含用于应用程序域中的应用程序激活的高级类型。System.Runtime.InteropServices = 提供各种支持 COM 互操作和平台调用服务的成员。如果对这些服务不熟悉，请参见与非托管代码交互操作。System.Runtime.InteropServices.ComTypes = 包含作为托管代码的 COM 函数定义的方法。这些函数取代了 System.Runtime.InteropServices 命名空间中现已过时的 UCOM 方法。System.Runtime.InteropServices.Expando = 包含 IExpando 接口，此接口允许通过添加或移除对象的成员来修改对象。System.Runtime.Remoting = 提供允许开发人员创建和配置分布式应用程序的类和接口。System.Runtime.Remoting.Activation = 提供支持服务器和客户端远程对象激活的类和对象。System.Runtime.Remoting.Channels = 包含支持和处理信道和信道接收器的类，这些信道和信道接收器在客户端对远程对象调用方法时用作传输媒介。System.Runtime.Remoting.Channels.Http = 包含使用 HTTP 协议与远程位置之间相互传输消息和对象的信道。默认情况下，HTTP 信道以 SOAP 格式对对象和方法调用进行编码以便传输，但在信道的配置属性中也可以指定其他编码和解码格式化程序接收器。System.Runtime.Remoting.Channels.Ipc = 定义用于远程处理的通信信道，该信道使用 Windows 操作系统的进程间通信 (IPC) 系统。由于未使用网络通信，IPC 信道要比 HTTP 和 TCP 信道快得多，但是它只能用于相同物理计算机上的应用程序域之间的通信。System.Runtime.Remoting.Channels.Tcp = 包含使用 TCP 协议与远程位置之间相互传输消息和对象的信道。默认情况下，TCP 信道以二进制格式对对象和方法调用进行编码以便传输，但在信道的配置属性中也可以指定其他编码和解码格式化程序接收器。System.Runtime.Remoting.Contexts = 包含定义所有对象所驻留的上下文的对象。上下文是一个有序的属性序列，用于定义其中的对象所处的环境。上下文是在对象的激活过程中创建的，这些对象被配置为要求某些自动服务，如同步、事务、实时 (JIT) 激活、安全性等。多个对象可以存留在一个上下文内。System.Runtime.Remoting.Lifetime = 包含管理远程对象生存期的类。 传统上，分布式垃圾回收功能使用引用计数和 Ping 来控制对象的生存期。这种机制在每一项服务只有较少的客户端时可以正常工作，但是当每一项服务有几千个客户端时就不能正常工作了。远程处理生存期服务将每一项服务与一个租约关联，当租约到期时，就会删除该服务。生存期服务可以起到传统的分布式垃圾回收器的作用，并且当每一项服务的客户端数量增加时也能很好地调整。System.Runtime.Remoting.Messaging = 包含用于创建和远程处理消息的类。远程处理基础结构使用消息与远程对象进行通信。消息用于传输远程方法调用、激活远程对象和交流信息。消息对象携带一组命名属性，其中包括操作标识符、代表信息和参数。System.Xml = 提供基于标准的 XML 处理支持。System.Xml.Linq = 包含用于 LINQ to XML 的类型，LINQ to XML 是内存中的 XML 编程接口，使您可以轻松有效地修改 XML 文档。System.Xml.Schema = 包含提供基于标准的 XML 架构定义语言 (XSD) 架构支持的 XML 类。System.Xml.Serialization = 包含用于将对象序列化为 XML 格式的文档或流的类。System.Xml.Serialization.Advanced = 包含可让您自定义从 Web 服务描述语言 (WSDL) 文档生成的代码的类。System.Xml.Serialization.Configuration = 包含用于读取应用程序配置文件中的 system.xml.serialization 元素节中的值的类。System.Xml.XPath = 包含用于定义游标模型的类，该模型可将 XML 信息项作为 XQuery 1.0 和 XPath 2.0 数据模型的实例进行导航和编辑。System.Xml.Xsl = 提供可扩展样式表转换 (XSLT) 转换支持。此命名空间支持 W3C XSL 转换 (XSLT) 1.0 版建议。System.Xml.Xsl.Runtime = 提供对 System.Xml.Xsl 命名空间中的类的内部支持。此命名空间中的类支持 .NET Framework 基础结构，但不应在代码中直接使用。UIAutomationClientsideProviders = 包含单个用于映射客户端自动化提供程序的类。IEHost.Execute = 已否决的命名空间和内部命名空间Microsoft.CLRAdmin = 已否决的命名空间和内部命名空间Microsoft.IE = 已否决的命名空间和内部命名空间Microsoft.JScript.Vsa = 已否决的命名空间和内部命名空间Microsoft.ManagementConsole = 已否决的命名空间和内部命名空间Microsoft.ManagementConsole.Advanced = 已否决的命名空间和内部命名空间Microsoft.ManagementConsole.Internal = 已否决的命名空间和内部命名空间Microsoft.ServiceModel.Channels.Mail.ExchangeWebService.Exchange2007 = 已否决的命名空间和内部命名空间Microsoft.VisualBasic.Vsa = 已否决的命名空间和内部命名空间Microsoft.Vsa.Vb.CodeDOM = 已否决的命名空间和内部命名空间Microsoft_VsaVb = 已否决的命名空间和内部命名空间RegCode = 已否决的命名空间和内部命名空间System.Configuration.Internal = 已否决的命名空间和内部命名空间System.Data.Linq.SqlClient = 已否决的命名空间和内部命名空间System.Data.Linq.SqlClient.Implementation = 已否决的命名空间和内部命名空间System.Deployment.Internal = 已否决的命名空间和内部命名空间System.Runtime.InteropServices.CustomMarshalers = 已否决的命名空间和内部命名空间System.ServiceModel.Internal = 已否决的命名空间和内部命名空间System.Web.Configuration.Internal = 已否决的命名空间和内部命名空间System.Web.Mail = 已否决的命名空间和内部命名空间System.Windows.Forms.ComponentModel.Com2Interop = 已否决的命名空间和内部命名空间System.Web.UI.Adapters = 包含控件适配器和页适配器的基类，可使用这些适配器重写页和控件的生命周期状态，以针对新的标记标准或特定浏览器修改它们的默认标记或行为。System.Web.UI.Design = 包含可用于扩展 ASP.NET 网页和 Web 服务器控件设计时支持的类。System.Web.UI.Design.MobileControls = 已过时。包含为 System.Web.UI.MobileControls 命名空间中的类提供设计时支持的类。此命名空间中的类已过时；请改用 System.Web.UI.Design.WebControls 中的类。System.Web.UI.Design.MobileControls.Converters = 包含为移动控件中的数据类型转换器提供设计时支持的类。System.Web.UI.Design.WebControls = 包含可用于扩展 Web 服务器控件设计时支持的类。System.Web.UI.Design.WebControls.WebParts = 包含为从 System.Web.UI.WebControls.WebParts 命名空间中的类派生的控件提供设计时支持的类。System.Web.UI.HtmlControls = 包含使您可以在 Web 窗体页上创建 HTML 服务器控件的类集合。HTML 服务器控件运行在服务器上，并且直接映射到大多数浏览器所支持的标准 HTML 标记。这使您能够以编程方式控制 Web 窗体页上的 HTML 元素。System.Web.UI.MobileControls = 已过时。包含一组 ASP.NET 服务器控件，这些控件可以针对不同的移动设备智能地呈现您的应用程序。此命名空间中的类已过时；请改用 System.Web.UI.WebControls 中的控件。System.Web.UI.MobileControls.Adapters = 其中包含的类可用于重写移动控件的生命周期阶段，以便修改移动控件的默认 HTML、CHTML 或 WML 标记或行为，使其适应新的标记标准或特定浏览器和移动设备。System.Web.UI.MobileControls.Adapters.XhtmlAdapters = 其中包含的类可用于重写移动控件的生命周期阶段，以便修改移动控件的默认 XHTML 标记或行为，使其适应新的标记标准或特定浏览器和移动设备。System.Web.UI.WebControls = 包含使您可以在网页上创建 Web 服务器控件的类。Web 服务器控件运行在服务器上，并且包括按钮和文本框等窗体控件。它们还包括具有特殊用途的控件（例如日历）。由于 Web 服务器控件运行在服务器上，因此可以以编程方式来控制这些元素。Web 服务器控件比 HTML 服务器控件更抽象。它们的对象模型不一定反映 HTML 语法。System.Web.UI.WebControls.Adapters = 其中包含的类可用于重写 Web 控件的生命周期阶段，以便修改控件的默认标记或行为，使其适应新的标记标准或特定浏览器。System.Web.UI.WebControls.WebParts = 包含类和接口的一个完整集，用于创建其外观和行为可由最终用户修改（个性化设置）的网页。每个页的用户定义设置被保存下来以供今后的浏览器会话使用。System.Web.Util = 包含使回调方法能够在事务的范围下运行以及允许将工作发送到单独线程的类。System.Windows = 提供了一些重要的 Windows Presentation Foundation (WPF) 基元素类、各种支持 WPF 属性系统和事件逻辑的类以及由 WPF 核心和框架更加广泛使用的其他类型。System.Windows.Annotations = 包含支持对在 Windows Presentation Foundation (WPF) 文档查看控件中显示的内容添加用户创建的批注的类型。System.Windows.Annotations.Storage = 包含用于定义存储结构和介质以保存和检索用户创建的批注的类。System.Windows.Automation = 包含提供对 Windows Presentation Foundation (WPF) 用户界面自动化客户端的支持的类。System.Windows.Automation.Peers = 定义 AutomationPeer 基类以及从其派生的并对应于 .NET Framework 控件的一组类型。System.Windows.Automation.Provider = 包含用于为 Windows Presentation Foundation (WPF) 创建 UI 自动化提供程序的类型。System.Windows.Automation.Text = 包含用于指定 Windows Presentation Foundation (WPF) UI 自动化的文本格式设置和相关行为的枚举。System.Windows.Controls = 包含用于创建使用户可以与应用程序进行交互的控件的类。System.Windows.Controls.Primitives = 包含旨在用作其他更复杂控件的一部分的基类和控件。System.Windows.Converters = 包含在 Windows Presentation Foundation (WPF) 中的序列化期间支持类型转换的类。System.Windows.Data = 包含用于将属性绑定到数据源、数据源提供程序类以及集合和视图的特定于数据的实现的类。System.Windows.Documents = 包含支持创建 FixedDocument、FlowDocument 和 XML 纸张规范 (XPS) 文档的类。System.Windows.Documents.DocumentStructures = 提供用于描述 XpsDocument 的结构（包括节、段落、图形、项目符号列表或编号列表以及表格）的类。System.Windows.Documents.Serialization = 包含支持创建和使用运行库可访问的插件序列化程序的类，这些序列化程序可读写不同数据格式的文档。System.Windows.Forms = 包含用于创建基于 Windows 的应用程序的类，这些应用程序可以充分利用 Windows 操作系统中的丰富用户界面功能。System.Windows.Forms.Design = 包含支持 Windows 窗体组件的设计时配置和行为的类。这些类包括：提供 Windows 窗体组件（即一组设计时服务）支持的设计器类、用于配置特定类型的属性的 UITypeEditor 类，以及用于导入 ActiveX 控件的类。System.Windows.Forms.Design.Behavior = 包含用于为组件创建设计时的自定义用户界面行为的类。System.Windows.Forms.Integration = 包含支持 Windows 窗体与 Windows Presentation Foundation (WPF) 控件之间的交互操作的类。System.Windows.Forms.Layout = 包含支持设计时和运行时布局行为的类。System.Windows.Forms.VisualStyles = 包含用于通过视觉样式呈现控件和其他 Windows 用户界面元素的类。System.Windows.Ink = unknownSystem.Windows.Ink.AnalysisCore = 提供墨迹分析的基级功能。System.Windows.Input = 包含支持 Windows Presentation Foundation (WPF) 输入系统的类。System.Windows.Input.StylusPlugIns = 提供支持对来自 Windows Presentation Foundation (WPF) 平台上 Tablet 笔的数据进行操作的类。System.Windows.Interop = 包含支持 Windows Presentation Foundation (WPF) 和其他技术之间的交互操作的类。System.Windows.Markup = 包含在 Windows Presentation Foundation (WPF) 应用程序中支持序列化和可扩展应用程序标记语言 (XAML) 的类。System.Windows.Markup.Localizer = 包含用于协助进行二进制 XAML (BAML) 源的本地化的类型。System.Windows.Markup.Primitives = 包含在 Windows Presentation Foundation (WPF) 应用程序中支持可扩展应用程序标记语言 (XAML) 的类。System.Windows.Media = 包含允许在 Windows Presentation Foundation (WPF) 应用程序中集成丰富媒体的类，这些媒体包括绘图、文本和音频/视频内容。System.Windows.Media.Animation = 包含用于在 Windows Presentation Foundation (WPF) 应用程序中提供属性动画功能的类。System.Windows.Media.Converters = 包含由标记编写器用于序列化可扩展应用程序标记语言 (XAML) 的类型。System.Windows.Media.Effects = 包含可用于将视觉效果应用到位图图像的类型。System.Windows.Media.Imaging = 包含用于对位图图像进行编码和解码的类型。System.Windows.Media.Media3D = 包含在 Windows Presentation Foundation (WPF) 应用程序中支持类型三维表示形式的类。System.Windows.Media.Media3D.Converters = 定义 MarkupWriter 类用于序列化可扩展标记语言 (XAML) 的类型。System.Windows.Media.TextFormatting = 包含用于控制文本的格式设置的类型，文本格式控制通常是在低于基于控件的文本表示形式或文本对象模型的级别上进行。System.Windows.Navigation = 包含用于导航（包括窗口之间的导航）和导航日记的类型。System.Windows.Resources = 提供支持 Windows Presentation Foundation (WPF) 资源模型和“资源”生成操作的低级类。System.Windows.Shapes = 包含可以在可扩展应用程序标记语言 (XAML) 或代码中使用的形状库。System.Windows.Threading = 包含支持 Windows Presentation Foundation (WPF) 线程处理系统的类。System.Windows.Xps = 包含用于将 XML 纸张规范 (XPS) 文档写入到数据存储区或打印队列的类。System.Windows.Xps.Packaging = 包含可使应用程序读写 XPS 文档组件的类型。System.Windows.Xps.Serialization = 包含支持 XPS 文档序列化的类。System.Workflow.Activities = 包含用于定义可添加到工作流中以创建和运行工作进程的可执行表示形式的活动的类。System.Workflow.Activities.Configuration = 包含表示配置文件的节的类。System.Workflow.Activities.Rules = 包含用于定义构成规则的条件和操作的类。System.Workflow.Activities.Rules.Design = 包含用于管理“规则集编辑器”和“规则条件编辑器”对话框的类。System.Workflow.ComponentModel = 包含用于创建活动和工作流的类型。System.Workflow.ComponentModel.Compiler = 提供用于验证和编译活动和工作流的基础结构。System.Workflow.ComponentModel.Design = 包含开发人员可用于生成工作流和活动的自定义设计时行为的类。System.Workflow.ComponentModel.Serialization = 提供用于管理活动和工作流在可扩展应用程序标记语言 (XAML) 和 CodeDOM 之间的序列化的基础结构。System.Workflow.Runtime = 包含可用于控制工作流运行时引擎和工作流实例的执行的类型。System.Workflow.Runtime.Configuration = 包含用于配置工作流运行时引擎的类。System.Workflow.Runtime.DebugEngine = 包含在调试工作流实例的过程中使用的类型。System.Workflow.Runtime.Hosting = 包含与通过宿主应用程序提供给工作流运行时引擎的服务相关的类。System.Workflow.Runtime.Tracking = 包含与跟踪服务相关的类型。System.Runtime.Remoting.Metadata = 包含可用于为对象和字段自定义 SOAP 的生成和处理的类和属性。此命名空间中的类可用于指示 SOAPAction、类型输出、XML 元素名和 XML 命名空间统一资源标识符 (URI) 方法。System.Runtime.Remoting.Metadata.W3cXsd2001 = 包含由万维网联合会 (W3C) 在 2001 年定义的 XML 架构定义 (XSD)。W3C 的 XML Schema Part 2: Datatypes（XML 架构第二部分：数据类型）规范确定了各种数据类型的格式和行为。此命名空间包含符合 W3C 规范的数据类型的包装类。所有日期和时间类型都符合 ISO 标准规范。System.Runtime.Remoting.MetadataServices = 包含由 Soapsuds.exe 命令行工具和用户代码用来在元数据和远程处理基础结构的 XML 架构之间相互转换的类。System.Runtime.Remoting.Proxies = 包含控制和提供代理功能的类。代理是作为远程对象映像的本地对象。代理使客户端可以跨远程处理边界访问对象。System.Runtime.Remoting.Services = 包含为 .NET Framework 提供功能的服务类。System.Runtime.Serialization = 包含可用于序列化和反序列化对象的类。序列化是将对象或对象图转换为线性的字节序列以存储或传输到其他位置的过程。反序列化是接受存储的信息并用这些信息重新创建对象的过程。System.Runtime.Serialization.Configuration = 包含用于读取应用程序配置文件中的 <system.xml.serialization> 节中的值的类。System.Runtime.Serialization.Formatters = 提供由序列化格式化程序使用的通用枚举、接口和类。System.Runtime.Serialization.Formatters.Binary = 包含 BinaryFormatter 类，该类可用于以二进制格式将对象序列化和反序列化。System.Runtime.Serialization.Formatters.Soap = 包含 SoapFormatter 类，该类可用于以 SOAP 格式将对象序列化和反序列化。System.Runtime.Serialization.Json = 包含用于将对象序列化为 JavaScript 对象表示法 (JSON) 和从 JSON 反序列化对象的类型。System.Runtime.Versioning = 包含支持在 .NET Framework 的多个实现中进行版本控制的高级类型。System.Security = 提供 .NET Framework 安全系统的基础结构，包括权限的基类。System.Security.AccessControl = 提供用于控制对可保护对象的访问并审核针对这些对象执行的安全相关操作的编程元素。System.Security.Authentication = 提供一组描述连接安全性的枚举。System.Security.Cryptography = 提供加密服务，包括数据的安全编码和解码，以及其他许多操作，如哈希处理、随机数生成和消息身份验证。System.Security.Cryptography.Pkcs = 提供公钥加密标准 (PKCS) 的编程元素，包括用于签名数据、交换密钥、请求证书、公钥加密和解密以及其他安全功能的方法。System.Security.Cryptography.X509Certificates = 包含 Authenticode X.509 v.3 证书的公共语言运行库实现。此证书用唯一明确标识证书持有者的私钥签名。System.Security.Cryptography.Xml = 包含支持创建和验证 XML 数字签名的类。System.Security.Permissions = 定义根据策略控制操作和资源访问的类。System.Security.Policy = 包含代码组、成员条件和证据。这三种类型的类用于创建由 .NET Framework 安全策略系统应用的规则。证据类是安全策略的输入，而成员条件是开关；二者共同创建策略语句并确定授予的权限集。策略级别和代码组是策略层次的结构。代码组是规则的封装并且在策略级别中分层排列。System.Security.Principal = 定义表示运行代码的安全上下文的主体对象。System.Security.RightsManagement = 包含支持对应用程序创建的内容（例如存储在 Package 或 XpsDocument 中的文本）进行权限管理的类。System.ServiceModel = 包含生成 Windows Communication Foundation (WCF) 服务和可以用于生成广泛分布的应用程序的客户端应用程序所必需的类型。System.ServiceModel.Activation = 包含在托管宿主环境中构造和修改服务宿主的动态创建所需要的类型。System.ServiceModel.Activation.Configuration = 包含用于表示 SMSvcHost.exe.config 文件中的配置元素的类。System.ServiceModel.Channels = 包含构造和修改由客户端和服务用来相互通信的消息所需要的类型、用于交换消息的信道的类型、用于这些信道的信道工厂和信道侦听器以及用于配置它们的绑定元素。System.ServiceModel.ComIntegration = 包含将 Windows Communication Foundation (WCF) 服务和客户端应用程序与 COM 组件集成所必需的类型。System.ServiceModel.Configuration = 包含 Windows Communication Foundation (WCF) 基础结构将 XML 转换为公共语言运行库 (CLR) 类型时所使用的类型。System.ServiceModel.Description = 包含构造和修改服务、协定和终结点（用于生成运行库和导出元数据）的说明所需要的类型。System.ServiceModel.Diagnostics = 包含用于配置诊断目的的性能计数器的枚举。System.ServiceModel.Dispatcher = 包含修改服务和客户端应用程序的运行时执行行为所需要的类型。System.ServiceModel.Install.Configuration = 包含用于安装和配置有关在计算机上运行 Windows Communication Foundation (WCF) 的各种配置设置的类。System.ServiceModel.MsmqIntegration = 包含用于 Microsoft 消息队列服务 (MSMQ) 集成的类，此集成允许 MSMQ 应用程序与 Windows Communication Foundation (WCF) 应用程序进行通信。System.ServiceModel.PeerResolvers = System.ServiceModel.PersistenceSystem.ServiceModel.Security = 包含支持常规 Windows Communication Foundation (WCF) 安全的类。System.ServiceModel.Security.Tokens = 包含表示安全令牌和 Windows Communication Foundation (WCF) 安全的证书的类型。System.ServiceModel.Syndication = 包含构成整合对象模型的类型。System.ServiceModel.Web = 包含构成 Web HTTP 编程模型的类型。System.ServiceProcess = 提供使您可以实现、安装和控制 Windows 服务应用程序的类。服务是长期运行的可执行文件，它们不通过用户界面来运行。实现服务涉及以下方面：从 ServiceBase 类继承，定义在传入开始、停止、暂停和继续命令时要处理的特定行为，以及定义在系统关闭时要执行的自定义行为和操作。System.ServiceProcess.Design = 包含可用于扩展对 Windows 服务应用程序的设计时支持的类。System.Speech.AudioFormat = UnknownSystem.Speech.Recognition = 包含用于实现语音识别的 Windows 桌面语音技术类型。System.Speech.Recognition.SrgsGrammar = System.Speech.SynthesisSystem.Speech.Synthesis.TtsEngine = 包含支持基于语音合成标记语言 (SSML) 创建用于呈现文本到语音 (TTS) 的自定义引擎的类型。System.Text = 包含表示 ASCII、Unicode、UTF-7 和 UTF-8 字符编码的类；用于在字符块和字节块之间相互转换的抽象基类；以及不需要创建 String 的中间实例就可以操作和格式化 String 对象的帮助器类。System.Text.RegularExpressions = 包含提供对 .NET Framework 正则表达式引擎的访问的类。此命名空间提供的正则表达式功能可在 .NET Framework 中运行的任何平台或语言上使用。System.Threading = 提供支持多线程编程的类和接口。除了同步线程活动和数据访问的类（Mutex、Monitor、Interlocked、AutoResetEvent 等）外，此命名空间还包含一个 ThreadPool 类（可让您使用系统提供的线程池）和一个 Timer 类（在线程池线程上执行回调方法）。System.Timers = 提供允许按指定的间隔引发事件的 Timer 组件。System.Transactions = 包含允许您的代码参与事务的类。这些类支持具有分散各处的多名参加人、多阶段通知和可持续登记的事务。System.Transactions.Configuration = 包含描述 System.Transactions 类使用的配置选项的类。System.Web = 提供启用浏览器/服务器通信的类和接口。此命名空间包括提供有关当前 HTTP 请求的广泛信息的 HttpRequest 类、管理对客户端的 HTTP 输出的 HttpResponse 类以及提供对服务器端实用工具和进程的访问的 HttpServerUtility 类。System.Web 还包括用于 Cookie 操作、文件传输、异常信息和输出缓存控制的类。System.Web.ApplicationServices = 提供可用于访问 ASP.NET 窗体身份验证、角色和配置文件应用程序服务（例如 Windows Communication Foundation (WCF) 服务）的类。System.Web.Caching = 提供用于在服务器上缓存常用数据的类。其中包含 Cache 类，该类是一个字典，您可以在其中存储任意数据对象，如哈希表和数据集。它还为这些对象提供了失效功能，并为您提供了添加和移除这些对象的方法。您也可以添加依赖于其他文件或缓存项的对象，并在某个对象从缓存中被移除时执行回调以通知您的应用程序。System.Web.Services.Description = 由一些类组成，这些类使您能够使用 Web 服务描述语言 (WSDL) 公开描述 XML Web services。此命名空间中的每个类对应于 WSDL 规范中的一个特定元素，并且类层次结构对应于有效的 WSDL 文档的 XML 结构。System.Web.Services.Discovery = 由一些类组成，这些类使 XML Web services 客户端可以通过称为“XML Web services 发现”的进程找到 Web 服务器上可用的 XML Web services。System.Web.Services.Protocols = 由一些类组成，这些类定义用于在通信期间通过网络在 XML Web services 客户端和用 ASP.NET 创建的 XML Web services 之间传输数据的协议。System.Web.SessionState = 提供支持在服务器上存储特定于 Web 应用程序中的单个客户端的数据的类和接口。会话状态数据用于向客户端提供与应用程序的持久连接的外观。状态信息可以存储在本地进程内存中，或者，对于网络场配置来说，可以使用 ASP.NET 状态服务或 SQL Server 数据库将状态信息存储在进程外。System.Web.UI = 提供可用于创建用作 ASP.NET Web 应用程序用户界面的 ASP.NET 服务器控件和 ASP.NET 网页的类和接口。此命名空间包含 Control 类，该类提供所有 HTML 服务器控件、Web 服务器控件和带有一组通用功能的用户控件。该类还包含 Page 控件，每当对 ASP.NET Web 应用程序中的 .aspx 页发出请求时，将会自动生成此控件。此外，此命名空间还包括为服务器控件提供数据绑定功能、保存给定控件或页的视图状态的功能以及分析功能的类。