CREATE TABLE [dbo].[FUNCTION_SETS] (
    [ID]             NVARCHAR (36) NOT NULL,
    [APP_ID]         NVARCHAR (36) NOT NULL,
    [NAME]           NVARCHAR (32) NOT NULL,
    [CODE_NAME]      NVARCHAR (32) NOT NULL,
    [DESCRIPTION]    NVARCHAR (32) NULL,
    [SORT_ID]        INT           NULL,
    [CHILDREN_COUNT] INT           CONSTRAINT [DF_FUNCTION_SET_CHILDREN_COUNT] DEFAULT (0) NOT NULL,
    [RESOURCE_LEVEL] NVARCHAR (32) NOT NULL,
    [LOWEST_SET]     NCHAR (1)     CONSTRAINT [DF_FUNCTION_SETS_LOWEST_SET] DEFAULT (N'n') NULL,
    [INHERITED]      NCHAR (1)     CONSTRAINT [DF_FUNCTION_SETS_INHERITED] DEFAULT (N'n') NULL,
    [CLASSIFY]       NCHAR (1)     CONSTRAINT [DF_FUNCTION_SETS_CLASSIFY] DEFAULT (N'n') NULL,
    [MODIFY_TIME]    DATETIME      CONSTRAINT [DF_FUNCTION_SET_MODIFY_TIME] DEFAULT (getdate()) NULL,
    CONSTRAINT [PK_FUNCTION_SET] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
CREATE UNIQUE NONCLUSTERED INDEX [CODE_NAME]
    ON [dbo].[FUNCTION_SETS]([APP_ID] ASC, [CODE_NAME] ASC);


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_APP_ID_RESOURCE_LEVEL]
    ON [dbo].[FUNCTION_SETS]([APP_ID] ASC, [RESOURCE_LEVEL] ASC, [CLASSIFY] ASC) WITH (FILLFACTOR = 50, PAD_INDEX = ON);


GO
CREATE TRIGGER [TRIG_FUNC_SET_DELETE] ON [dbo].[FUNCTION_SETS] 
FOR DELETE 
AS
BEGIN
	UPDATE FUNCTION_SETS SET FUNCTION_SETS.CHILDREN_COUNT = FUNCTION_SETS.CHILDREN_COUNT - (SELECT COUNT(*) FROM deleted WHERE LEFT(RESOURCE_LEVEL,LEN(RESOURCE_LEVEL)-3) =  FUNCTION_SETS.RESOURCE_LEVEL)
	FROM deleted  
	WHERE FUNCTION_SETS.APP_ID = deleted.APP_ID
	AND FUNCTION_SETS.RESOURCE_LEVEL = LEFT(deleted .RESOURCE_LEVEL, LEN(deleted .RESOURCE_LEVEL)-3);
	
	DELETE FUNC_SET_TO_FUNCS FROM deleted WHERE FUNC_SET_ID = deleted.ID
	INSERT INTO FUNCTION_SETS_DELETE SELECT * FROM deleted
END

GO
CREATE TRIGGER [TRIG_FUNC_SET_INSERT] ON [dbo].[FUNCTION_SETS] 
FOR INSERT NOT FOR REPLICATION 
AS
BEGIN
	UPDATE FUNCTION_SETS SET FUNCTION_SETS.CHILDREN_COUNT = FUNCTION_SETS.CHILDREN_COUNT + (SELECT COUNT(*) FROM inserted WHERE LEFT(RESOURCE_LEVEL,LEN(RESOURCE_LEVEL)-3) =  FUNCTION_SETS.RESOURCE_LEVEL)
	FROM inserted  
	WHERE FUNCTION_SETS.APP_ID = inserted.APP_ID
	AND FUNCTION_SETS.RESOURCE_LEVEL = LEFT(inserted.RESOURCE_LEVEL, LEN(inserted.RESOURCE_LEVEL)-3)
END
