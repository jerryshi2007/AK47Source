CREATE VIEW [WF].[PROCESS_ANALYSIS_DETAIL_VIEW]
--ALTER VIEW [WF].[PROCESS_ANALYSIS_DETAIL_VIEW]
AS
SELECT
--TOP 10
	P.INSTANCE_ID AS PROCESS_ID, P.RESOURCE_ID, P.DESCRIPTOR_KEY, P.PROCESS_NAME,SUB.ACTIVITY_COUNT,SUB.USER_ACTIVITY_COUNT,SUB.IS_ALL_COMPLETED, ACI.SUBJECT, P.APPLICATION_NAME, 
    P.STATUS AS PROCESS_STATUS, P.DEPARTMENT_ID, P.DEPARTMENT_NAME, P.DEPARTMENT_PATH, A.ACTIVITY_ID, A.ACTIVITY_DESC_KEY, P.OWNER_ACTIVITY_ID,
	A.ACTIVITY_NAME, A.OPERATOR_ID, A.OPERATOR_NAME, A.OPERATOR_PATH, A.STATUS AS CURRENT_STATUS, A.START_TIME, 
    A.END_TIME,CAST(A.START_TIME as date) AS START_DATE, CAST(A.END_TIME as date) AS END_DATE,
	DATEPART(HOUR,A.START_TIME) AS START_HOUR, DATEPART(HOUR,A.END_TIME) AS END_HOUR, 
	CA.USER_ID AS CURRENT_USER_ID, CA.USER_NAME AS CURRENT_USER_NAME, CA.USER_PATH AS CURRENT_USER_PATH,
	P.PROGRAM_NAME, DATEDIFF(mi,A.START_TIME, A.END_TIME)  AS ProcessInterval,
	B.DATA.value('/Process[1]/OwnerDepartment[1]/@Name','nvarchar(255)') as OwnerDepartmentName
FROM
	WF.PROCESS_INSTANCES AS P WITH (NOLOCK) INNER JOIN (
		SELECT PROCESS_ID ,COUNT(ACTIVITY_ID) AS ACTIVITY_COUNT,SUM(CASE WHEN OPERATOR_ID IS NULL THEN 0 ELSE 1 END) AS USER_ACTIVITY_COUNT, MIN(CASE STATUS WHEN 'Completed' THEN 1 ELSE 0 END) AS IS_ALL_COMPLETED
		FROM WF.PROCESS_CURRENT_ACTIVITIES WITH(NOLOCK)
		GROUP BY PROCESS_ID
	)SUB ON P.INSTANCE_ID = SUB.PROCESS_ID	INNER JOIN
    WF.PROCESS_CURRENT_ACTIVITIES AS A WITH (NOLOCK) ON P.INSTANCE_ID = A.PROCESS_ID INNER JOIN
    WF.PROCESS_CURRENT_ASSIGNEES AS CA WITH (NOLOCK) ON A.ACTIVITY_ID = CA.ACTIVITY_ID LEFT OUTER JOIN
    WF.APPLICATIONS_COMMON_INFO AS ACI WITH (NOLOCK) ON P.RESOURCE_ID = ACI.RESOURCE_ID LEFT OUTER JOIN
	WF.PROCESS_DIMENSIONS B WITH (NOLOCK) ON A.PROCESS_ID = B.PROCESS_ID

