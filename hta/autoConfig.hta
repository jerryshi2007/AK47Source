<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Auto Configuration</title>
	<hta:application id="oMyApp" applicationname="monster" border="thick" caption="Auto Configuration"
		showintaskbar="yes" singleinstance="yes" sysmenu="yes" windowstate="normal">
	<style type="text/css">
		#headerCell
		{
			vertical-align: top;
			height: 48px;
		}
		#header
		{
			width: 100%;
			height: 48px;
			background-color: green;
			filter: progid:DXImageTransform.Microsoft.Alpha(opacity=50, style=1, finishOpacity=100, startx=0, starty=0, finishx=0, finishy=1024);
		}
		.headerText
		{
			margin-top: 12px;
			margin-left: 12px;
			font-size: 20px;
			font-weight: bold;
			color: White;
		}
		#bodyCell
		{
			vertical-align: top;
		}
		#leftCell
		{
			background-color: #f5f6f6;
			vertical-align: top;
			width: 240px;
			padding-right: 4px;
		}
		.secondTitle
		{
			color: Maroon;
			font-weight: bold;
		}
		#stepsDesp
		{
			font-size: 12px;
		}
	</style>
	<script type="text/javascript">
		var Switches = [
			{ key: "1001", value: 0 },
			{ key: "1004", value: 0 },
			{ key: "1200", value: 0 },
			{ key: "1201", value: 0 },
			{ key: "1206", value: 0 },
			{ key: "1208", value: 0 },
			{ key: "1209", value: 0 },
			{ key: "120B", value: 0 },
			{ key: "1400", value: 0 },
			{ key: "1405", value: 0 },
			{ key: "1406", value: 0 },
			{ key: "1407", value: 0 },
			{ key: "1601", value: 0 },
			{ key: "1606", value: 0 },
			{ key: "160A", value: 0 },
			{ key: "1802", value: 0 },
			{ key: "1809", value: 3 },
			{ key: "1407", value: 0 },
			{ key: "1A02", value: 0 },
			{ key: "1A03", value: 0 },
			{ key: "2000", value: 0 },
			{ key: "2102", value: 0 },
			{ key: "2103", value: 0 },
			{ key: "2104", value: 0 },
			{ key: "2105", value: 0 },
			{ key: "2201", value: 0 }
		];

		/*
		1001     ActiveX controls and plug-ins: Download signed ActiveX controls
		1004     ActiveX controls and plug-ins: Download unsigned ActiveX controls
		1200     ActiveX controls and plug-ins: Run ActiveX controls and plug-ins
		1201     ActiveX controls and plug-ins: Initialize and script ActiveX controls not marked as safe for scripting
		1206     Miscellaneous: Allow scripting of Internet Explorer Web browser control ^
		1207     Reserved #
		1208     ActiveX controls and plug-ins: Allow previously unused ActiveX controls to run without prompt ^
		1209     ActiveX controls and plug-ins: Allow Scriptlets
		120A     ActiveX controls and plug-ins: ActiveX controls and plug-ins: Override Per-Site (domain-based) ActiveX restrictions
		120B     ActiveX controls and plug-ins: Override Per-Site (domain-based) ActiveX restrictions
		1400     Scripting: Active scripting
		1402     Scripting: Scripting of Java applets
		1405     ActiveX controls and plug-ins: Script ActiveX controls marked as safe for scripting
		1406     Miscellaneous: Access data sources across domains
		1407     Scripting: Allow Programmatic clipboard access
		1408     Reserved #
		1601     Miscellaneous: Submit non-encrypted form data
		1604     Downloads: Font download
		1605     Run Java #
		1606     Miscellaneous: Userdata persistence ^
		1607     Miscellaneous: Navigate sub-frames across different domains
		1608     Miscellaneous: Allow META REFRESH * ^
		1609     Miscellaneous: Display mixed content *
		160A     Miscellaneous: Include local directory path when uploading files to a server ^
		1800     Miscellaneous: Installation of desktop items
		1802     Miscellaneous: Drag and drop or copy and paste files
		1803     Downloads: File Download ^
		1804     Miscellaneous: Launching programs and files in an IFRAME
		1805     Launching programs and files in webview #
		1806     Miscellaneous: Launching applications and unsafe files
		1807     Reserved ** #
		1808     Reserved ** #
		1809     Miscellaneous: Use Pop-up Blocker ** ^ (We use 3, it means that do not use popup blocker)
		180A     Reserved # 
		180B     Reserved #
		180C     Reserved #
		180D     Reserved #
		1A00     User Authentication: Logon
		1A02     Allow persistent cookies that are stored on your computer #
		1A03     Allow per-session cookies (not stored) #
		1A04     Miscellaneous: Don't prompt for client certificate selection when no 
		certificates or only one certificate exists * ^
		1A05     Allow 3rd party persistent cookies *
		1A06     Allow 3rd party session cookies *
		1A10     Privacy Settings *
		1C00     Java permissions #
		1E05     Miscellaneous: Software channel permissions
		1F00     Reserved ** #
		2000     ActiveX controls and plug-ins: Binary and script behaviors
		2001     .NET Framework-reliant components: Run components signed with Authenticode
		2004     .NET Framework-reliant components: Run components not signed with Authenticode
		2100     Miscellaneous: Open files based on content, not file extension ** ^
		2101     Miscellaneous: Web sites in less privileged web content zone can navigate into this zone **
		2102     Miscellaneous: Allow script initiated windows without size or position constraints ** ^
		2103     Scripting: Allow status bar updates via script ^
		2104     Miscellaneous: Allow websites to open windows without address or status bars ^
		2105     Scripting: Allow websites to prompt for information using scripted windows ^
		2200     Downloads: Automatic prompting for file downloads ** ^
		2201     ActiveX controls and plug-ins: Automatic prompting for ActiveX controls ** ^
		2300     Miscellaneous: Allow web pages to use restricted protocols for active content **
		2301     Miscellaneous: Use Phishing Filter ^
		2400     .NET Framework: XAML browser applications
		2401     .NET Framework: XPS documents
		2402     .NET Framework: Loose XAML
		2500     Turn on Protected Mode [Vista only setting] #
		2600     Enable .NET Framework setup ^
		*/

		var ZoneMapRoot = "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap";
		var ZoneMapDomains = ZoneMapRoot + "\\Domains";
		var ZoneEscMapDomains = ZoneMapRoot + "\\EscDomains";
		var ZoneMapRanges = ZoneMapRoot + "\\Ranges";
		var ZoneEscMapRanges = ZoneMapRoot + "\\EscRanges";
		var ZoneSwitches = "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2";

		function getShellObject() {
			return new ActiveXObject("WScript.Shell");
		}

		function isIPAddress(addr) {
			var result = true;

			var parts = addr.split(".");

			if (parts.length == 4) {
				for (var i = 0; i < parts.length; i++) {
					var d = parseInt(parts[i]);

					if (isNaN(d)) {
						result = false;
						break;
					}

					if (d < 0 || d > 255) {
						result = false;
						break;
					}
				}
			}
			else
				result = false;

			return result;
		}

		function findRangeName(rangeRoot, ip) {
			var shell = getShellObject();

			var i = 1;

			try {
				while (true) {
					var data = shell.RegRead(rangeRoot + "\\Range" + i + "\\:Range");

					if (data == ip)
						break;

					i++;
				}
			}
			catch (e) {
			}

			return "Range" + i;
		}

		function setIPAddressInTrustedSites(ip, schema) {
			var shell = getShellObject();

			var rangeName = findRangeName(ZoneMapRanges, ip);

			shell.RegWrite(ZoneMapRanges + "\\" + rangeName + "\\:Range", ip, "REG_SZ");
			shell.RegWrite(ZoneMapRanges + "\\" + rangeName + "\\" + schema, 2, "REG_DWORD");

			rangeName = findRangeName(ZoneEscMapRanges, ip);

			shell.RegWrite(ZoneEscMapRanges + "\\" + rangeName + "\\:Range", ip, "REG_SZ");
			shell.RegWrite(ZoneEscMapRanges + "\\" + rangeName + "\\" + schema, 2, "REG_DWORD");
		}

		function setDominNamesByParts(domainRoot, domainParts, schema) {
			var path = domainRoot + "\\" + domainParts.firstLevel;

			if (domainParts.secondLevel != "")
				path += "\\" + domainParts.secondLevel;

			var shell = getShellObject();
			shell.RegWrite(path + "\\" + schema, 2, "REG_DWORD");
		}

		function setDomainNamesInTrustedSites(address, schema) {
			var domainParts = getDomainNameParts(address);

			setDominNamesByParts(ZoneMapDomains, domainParts, schema);
			setDominNamesByParts(ZoneEscMapDomains, domainParts, schema);
		}

		function getDomainNameParts(address) {
			address = address.toLowerCase();
			var parts = address.split(".");

			var result = { firstLevel: "", secondLevel: "" };

			if (parts.length > 1) {
				result.firstLevel = parts[parts.length - 2] + "." + parts[parts.length - 1];

				for (var i = 0; i < parts.length - 2; i++) {
					if (result.secondLevel != "")
						result.secondLevel += ".";

					result.secondLevel += parts[i];
				}
			}
			else
				result.firstLevel = parts[parts.length - 1];

			return result;
		}

		function setupAllSwitches(switches) {
			var shell = getShellObject();

			for (var i = 0; i < switches.length; i++) {
				var sw = switches[i];

				shell.RegWrite(ZoneSwitches + "\\" + sw.key, sw.value, "REG_DWORD");
			}
		}

		function onAutoConfigClick() {
			var address = domainName.value;
			var schema = schemaSelector.value;

			try {
				var domain = getDomainNameParts(address);

				if (isIPAddress(address))
					setIPAddressInTrustedSites(address, schema);
				else
					setDomainNamesInTrustedSites(address, schema);

				setupAllSwitches(Switches);

				alert("Config completed, please restart your Internet Explorer.");
			}
			catch (e) {
				if (e.Message)
					alert(e.Message);
				else
					alert(e);
			}
		}
	</script>
</head>
<body style="margin: 0px">
	<table style="width: 100%; height: 100%" cellpadding="0" cellspacing="0">
		<tr>
			<td id="headerCell">
				<div id="header">
					<div class="headerText">
						Internet Explorer auto configuration
					</div>
				</div>
			</td>
		</tr>
		<tr>
			<td id="bodyCell">
				<table style="width: 100%; height: 100%">
					<td id="leftCell">
						<div class="secondTitle">
							Configuration:
						</div>
						<div id="stepsDesp">
							<ul>
								<li>Add site to trusted sites</li>
								<li>Allow init or use unsigned activeX controls</li>
								<li>Enable resizing windows</li>
								<li>Allow access datasource across domain</li>
								<li>Disable popup blocker</li>
								<li>Enable user data persistence</li>
							</ul>
						</div>
					</td>
					<td>
						<div style="padding-left: 64px; margin-bottom: 32px">
							<lable for="schemaSelector"><span style="font-weight: bold;width:108px">Schema</span></lable>
							<select accesskey="S" id="schemaSelector" value="http">
								<option value="http">http</option>
								<option value="https">https</option>
							</select>
						</div>
						<div style="padding-left: 64px; margin-bottom: 32px">
							<lable for="domainName"><span style="font-weight: bold;width:108px">Domain Name</span></lable>
							<input accesskey="D" type="text" id="domainName" value="10.0.9.242" />
						</div>
						<div class="secondTitle" style="margin-bottom: 16px; padding-left: 64px">
							Press this button to auto config the security settings of Internet Explorer.
						</div>
						<div style="padding-left: 64px">
							<input type="button" accesskey="C" value="Config..." style="width: 120px; text-align: center"
								onclick="onAutoConfigClick();" />
						</div>
					</td>
				</table>
			</td>
		</tr>
	</table>
</body>
</html>
