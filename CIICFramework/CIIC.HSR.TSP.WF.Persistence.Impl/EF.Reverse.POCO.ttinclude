<#@ import namespace="System.Collections.Generic" #>
<#
fileManager.StartHeader();
// Copyright ?Simon Hughes 2012
// v2.5.1
#>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier

using CIIC.HSR.TSP.DataAccess.EF;
using CIIC.HSR.TSP.WF.BizObject;
using CIIC.HSR.TSP.WF.Persistence.Contract;
using System;

namespace <#= Namespace #>
{ 
<#
foreach(Table tbl in tables.Where(t => !t.IsMapping).OrderBy(x => x.NameHumanCase))
{
#>
<# fileManager.StartNewFile(tbl.NameHumanCase + RepositoryClassName +".gen"+ FileExtension); #>
<#if(IncludeComments){#>    // <#=tbl.Name#>
<# } #>
    public <# if(MakeClassesPartial) { #>partial <# } #>class <#=tbl.NameHumanCase + RepositoryClassName#> : EFRepository<<#=tbl.NameHumanCase#>BO>, I<#=tbl.NameHumanCase+ RepositoryClassName#>
    {
  
    }
<# } #>
<# fileManager.StartFooter(); #>
}
<# fileManager.EndBlock();   #>


namespace <#= Namespace #>
{ 

   <#
        var configName=System.IO.Path.GetFileNameWithoutExtension (this.Host.TemplateFile);
   
    #>
    
    public class <#=configName#>RepositoriesIoCConfig : CIIC.HSR.TSP.IoC.IIoCConfigure
	{

		public void Configure(IoC.IIoCContainer container)
		{
<#foreach(Table tbl in tables.Where(t => !t.IsMapping).OrderBy(x => x.NameHumanCase))
{
    #>                           
            	container.Register<I<#=tbl.NameHumanCase + RepositoryClassName#>, <#=tbl.NameHumanCase + RepositoryClassName#>>(alwaysNew: true);
    <#
} #>
		}
	}
}

<#
if(GenerateSeparateFiles)
    fileManager.Process(); #>
